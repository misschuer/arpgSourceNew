/***********************************************************************/
/*************** 本代码由协议工具自动生成，请勿手动修改 ****************/
/***********************************************************************/

#macro(gettype $i)
#if($i.ClientType == "String")##
string##
#elseif($i.ClientType == "uint" || $i.ClientType == "int" || $i.ClientType == "Number")##
number##
#else##
$i.ClientType ##
#end##
#end

#foreach($msg in $msglist)##



class $msg.Type#**#_$msg.Name
{				
	public optcode:number = 0;
	public static param_count:number = $msg.MsgParas.Count;
	public static optname:string = "on$msg.UpperName"; 
	private static input:ByteArray;		
	
#foreach( $m in $msg.MsgParas )
	/**
	 * $m.OnlyDescStr
	 */
#if($m.Type == "ByteArray")
	public $m.Name :ByteArray ;	//$m.Type	
#elseif($m.IsArray )
	public $m.Name :Array<#gettype($m)> = new Array(); //$m.Type
#else
	public $m.Name :#gettype($m) ;	//$m.Type		
#end
#end		

	/**
	 从输入二进制流中读取结构体
	 */
	public static read(self:$msg.Type#**#_$msg.Name, bytes:ByteArray):void
	{		
		if(this.input == null) 
			this.input = new ByteArray();							
		this.input =  bytes;
		
		//var parmLen:uint;
		//var i:int;
#foreach( $m in $msg.MsgParas )			
		//$m.OnlyDescStr
#if($m.Type == "ByteArray")
		self.$m.Name = Stream.malloc();
		self.$m.Name .readStream(this.input);
#elseif($m.IsArray&& $str_tool.IsStruct($m.Type))	
		if( self.$m.Name .length ) 
			throw Error("通讯对象池有异常");			
		var parmLen:number = this.input.readUint16();			
		for(var i:number=0;i<parmLen;i++){
			var _$m.Name:$m.ClientType = new $m.ClientType;
			_$m.Name .read(this.input);
			self.$m.Name .push(_$m.Name);
		}
#elseif($str_tool.IsStruct($m.Type))
		self.$m.Name = new $m.Type;
		self.$m.Name .read(this.input);
#elseif($m.IsArray)			
		self.$m.Name .length = 0;		//清空数组				
		var parmLen:number = this.input.readUint16();
		for(var i:number=0;i<parmLen;i++){				
			self.$m.Name .push( this.input.$m.ReadStreamFuncName ());
		}
#else
		self.$m.Name = this.input#**#. $m.ReadStreamFuncName ();		
#end			
		
#end
	}
}


#end
