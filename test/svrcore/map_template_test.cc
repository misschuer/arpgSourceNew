#include <gtest/gtest.h>

//#define private public
//#define protected public
#include <shared/map_template.h>

TEST(MapTemplate, ReadToken)
{
	MapTemplate mt;
	
	stringstream ss;
	ss << "a,b,c";
	
	string str;
	vector<string> strs;
	while(mt.ReadToken(ss,str))
	{
		strs.push_back(str);
	}

	ASSERT_EQ(strs.size(),3);
	ASSERT_EQ(strs[0],"a");
	ASSERT_EQ(strs[1],"b");
	ASSERT_EQ(strs[2],"c");
}


TEST(MapTemplate, ReadToken2)
{
	MapTemplate mt;

	stringstream ss;
	ss << "1,2,3";

	int i;
	vector<int> ints;
	while(mt.ReadToken(ss,i))
	{
		ints.push_back(i);
	}

	ASSERT_EQ(ints.size(),3);
	ASSERT_EQ(ints[0],1);
	ASSERT_EQ(ints[1],2);
	ASSERT_EQ(ints[2],3);
}

TEST(MapTemplate, LoadBaseinfo)
{
	MapTemplate mt;

	stringstream ss;
	ss << "4,新手村,2011-5-27,6763,5051,32,24,220,220,0,4,,1,0,0,0,0";

	ASSERT_TRUE(mt.LoadBaseinfo(ss));
	ASSERT_EQ(mt.m_baseinfo.mapid,4);
	ASSERT_EQ(mt.m_baseinfo.width,220);
	ASSERT_EQ(mt.m_baseinfo.height,220);
}


TEST(MapTemplate, LoadObstacle)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,新手村,2011-5-27,6763,5051,32,24,220,220,0,4,,1,0,0,0,0";
	mt.LoadBaseinfo(base_ss);
	stringstream ss;
	ss << "4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4026793983,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4278206463,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4293919743,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294901823,4294967295,4294967295,4294967295,4278190079,4294967295,4294967295,4294963203,4294967295,4294967295,4294967295,4291297279,4294967295,1073741823,4294967040,4294967295,4294967295,4294967295,4294475775,4294967295,67108863,4294967280,4294967295,4294967295,4294967295,4294902783,4294967295,4194303,4294967295,4294967295,4294967295,4294967295,4294959167,4294967295,4026793983,4294967295,4294967295,4294967295,4294967295,4294965249,4294967295,4278206463,4294967295,4294967295,4294967295,2147483647,4294966784,4294967295,4293919743,4294967295,4294967295,4294967295,536870855,4294967264,4294967295,4294901823,4294967295,4294967295,1073741823,134217724,4294967294,4294967295,4294963203,4294967295,4294967295,3254779903,3774873599,4294967295,1073741823,4294967040,4294967295,4294967295,4228907007,4294967295,4294967295,67108863,4294967280,4294967295,4294967295,4290777087,4294967295,4294967295,4194303,4294967295,4294967295,4294967295,4294836287,4294967295,4294967295,4026793983,4294967295,4294967295,4294967295,4294965249,4294967295,4290838527,4278206463,4294967295,4294967295,503382015,4294967168,4294967295,4294443263,4293919743,4294967295,4294967295,4095,4293918712,4286586879,4294901775,4294901823,4294967295,4294967295,2147483775,4244144127,4294443519,4294963200,4294963203,4294967295,4294967295,4026531847,4286579711,536838175,1073741568,4294967040,4294967295,268435455,4227858432,4293918735,67092480,67108856,4294967280,4294967295,7471103,2143289344,134152192,2151676928,4194303,4294967295,4294967295,204799,133955584,4192256,4228120512,4026793983,4294967295,4294967295,12799,8355840,131008,4292874240,4278206463,4294967295,4294967295,799,520192,3964,4294836224,4293919743,4294967295,4294967295,49,1073741824,113,4294959104,4294901823,4294967295,1073741823,3,2147483648,3,4294966784,4294963203,4294967295,33554431,0,1042251776,0,1073741760,4294967040,4294967295,2097151,0,67107840,0,67108856,4294967280,4294967295,131071,0,2097088,0,4194303,4294967295,4294967295,8191,0,58785788,3758096384,4026793959,4294967295,4294967295,511,0,8128511,805306368,4278206460,4294967295,4294967295,31,3758096384,507967,3221225472,4293919743,4294967295,4294967295,1,4227858432,31745,4227858432,4294901823,4294967295,536870911,0,260046848,2016,4292870144,4294963203,4294967295,2147483647,0,0,487,1073610752,4294967040,4294967295,134217727,0,939524096,60,67092480,4294967280,4294967295,1048575,0,25165824,15,4193280,4294967295,4294967295,16383,0,3759931392,1,4026793964,4294967295,4294967295,255,0,469876736,3758096384,4278206463,4294967295,4294967295,4294963207,4095,25169408,4261412864,4293919743,4294967295,1073741823,4294967168,255,2146959584,4292870144,4294901823,4294909951,16777215,4294967294,15,536838158,4294836224,4294963203,4290773107,4027515135,4294967295,4026531841,268434433,1073740800,536870656,4293918720,4286603267,2147483647,1065353216,67108800,67108800,8388592,0,4294705664,268435455,133955584,2181038078,4194303,805568511,0,4294959104,33554431,4093112320,4265607167,4026793983,2047,0,4294967040,2097151,4294934272,4294967295,4278206463,63,768,4294967292,524287,4294952956,4294967295,4293919743,1073741855,3758096384,4294967295,3221291007,4294963327,4294967295,4294901823,100663299,4278190080,4294967295,4261421055,4294933511,4294967295,1073737731,15728640,4294443008,4294967295,1071645695,4294952904,1073741823,67108608,0,4294934528,4294967295,2212495487,4294963261,67108863,8388592,0,4294966272,4294967295,4229431303,4294966787,4194303,2097151,0,4294967264,4294967295,534773761,4294967168,4026793983,131071,0,4294967295,1073741823,33488896,4294967264,4278206463,8191,4227858432,4294967295,67108863,4190208,4294967294,4293919743,511,4293918720,4294967295,8388607,3759143936,4294967295,4294901823,31,4294934528,4294967295,524287,4278320896,4294967295,4294963203,3,4294966272,4294967295,30719,4293951472,1073741823,1073741568,0,4294967264,4294967295,2147485471,4294905855,67108863,67108848,0,4294967295,4294967295,4227858465,4294966271,4194303,4194303,4026531840,4294967295,268435455,4290772992,4294967295,4026793983,262143,4278190080,4294967295,16777215,4279173120,4294967295,4278206463,16383,4293918720,4294967295,1048575,4294045696,4294967295,4293919743,1023,4294901760,4294967295,65535,4294909696,4294967295,4294901823,3221225599,4294967295,4294967295,4095,4294439360,4294967295,4294963203,4269801471,4294967295,4294967295,511,4093381660,1073741823,4294967040,4293132287,4294967295,4294967295,2147483679,4280270976,67108863,4294967280,4294844415,4294967295,4294967295,0,4293983232,4194303,4294967295,4294959359,4294967295,134217727,0,4294905792,4026793983,4294967295,4294966784,4294967295,4194303,0,4294963704,4278206463,134217727,4294967276,4294967295,131071,0,4294967234,4293919743,3238002687,4294967295,4294967295,4095,0,4294967294,4294901823,4236247039,4294967295,4294967295,63,3758096384,4294967295,4294963203,4287627263,4294967295,4294967295,1,4261412864,1073741823,4294967040,4294508543,4294967295,268435455,0,4292870144,67108863,4294967280,4294909951,4294967295,16777215,0,4294934528,4194303,4294967295,4294964223,4294967295,524287,0,4294965248,4026793983,4294967295,4294966847,4294967295,32767,0,4294967232,4278206463,4294967295,4294967271,4294967295,2047,0,4294967292,4293919743,2147483647,4294967292,4294967295,63,3758096384,4294967295,4294901823,2415919103,4294967295,4294967295,3,4278190080,4294967295,4294963203,4194303999,4294967295,1073729535,1056964608,4293918720,1073741823,4294967040,4282384383,4294967295,67106851,66060288,4294901760,67108863,4294967280,4293132287,536870911,4194048,4194176,4294965248,4194303,4294967295,4294868991,33554431,16256,3758620668,4294967295,4026793983,4294967295,4294955007,2097151,4026531840,4278255615,4294967295,4278206463,4294967295,4294965503,131071,4278190080,4294459391,4294967295,4293920767,4294967295,4294967071,4095,4294443008,4294935551,4294967295,4294901887,4294967295,4294967267,127,4294950912,4294965311,4294967295,4294963207,2147483647,4294967292,3,4294967294,4294967171,2147483647,4294967040,2415919103,536870911,3758096384,1073741823,4294967288,134217727,4294967280,4194303999,16777215,4261412864,2214592511,4294967295,8388607,4294967295,4294967295,1074790399,4294966272,4169138175,4294967295,4027056127,4294967295,4294967295,100171775,4294967280,4287102975,4294967295,4278222847,4294967295,4294967295,4034905087,4294967295,4293951487,4294967295,4293920767,4294967295,4294967295,4280286751,4294967295,4294903807,4294967295,4294901887,4294967295,4294967295,4294049776,4294967295,4294963327,4294967295,4294963207,4294967295,3288334335,4294909951,4294967295,761351,2147483647,4294967040,4294967295,4261660671,4294964223,536870911,3758096384,134217727,4294967280,4294967295,4294705279,4294967103,262143,4261412864,8388607,4294967295,4294967295,4294965263,4294967264,2047,4292870144,4027056127,4294967295,4294967295,268435455,4294967294,63,4294836224,4278222847,4294967295,4294967295,3774873599,4294967295,3,4294966272,4293920767,4294967295,4294967295,4263510015,536870911,1879048192,4294967288,4294901887,4294967295,4294967295,4293001215,2097151,4143972352,4294967295,4294963207,4294967295,4294967295,4294844415,65535,4292870144,2147483647,4294967040,4294967295,4294967295,4294951423,1023,4294836224,134217727,4294967280,4294967295,4294967295,4294966303,31,4294963200,8388607,4294967295,4294967295,4294967295,2147483523,0,4294967040,4027056127,4294967295,4294967295,1073741823,6553592,0,4294967280,4278222847,4294967295,4294967295,67108863,1023,0,4294967295,4293920767,4294967295,4294967295,3762290687,3,3758096384,4294967295,4294901887,4294967295,4294967295,524287,0,4261412864,4294967295,4294963207,4294967295,4294967295,65535,0,4292870144,2147483647,4294967040,4294967295,4294967295,32767,0,4294901760,134217727,4294967280,4294967295,4294967295,4095,0,4294963200,8388607,4294967295,4294967295,4294967295,1023,0,4294959104,4026793983,4294967295,4294967295,4294967295,511,4026531840,4294966785,4278206463,4294967295,4294967295,4294963327,31,2130706432,4294967232,4293919743,4294967295,4294967295,4294966273,1,267386880,4294967096,4294901887,4294967295,16777215,536868864,0,33488896,4294967280,4294963207,4294967295,131071,33521408,2097152,4193280,2147483647,4294967040,4294967295,8191,984000,4294844416,4027056127,134217727,4294967280,4294967295,255,0,4294966784,4278222847,8388607,4294967295,4294967295,15,0,4294967264,4293920767,4027056127,4294967295,4294967295,0,0,4294967294,4294902783,4278222847,4294967295,268435455,0,3758882816,4294967295,4294967295,4293920767,4294967295,33554431,0,4261527552,4294967295,4294967295,4294901887,4294967295,8388607,0,4292878272,4294967295,4294967295,4294963207,4294967295,1048575,0,4294836734,4294967295,2147483647,4294967040,4294967295,262143,4026531840,4294852639,4294967295,134217727,4294967280,4294967295,524287,4278190080,4294836225,4294967295,8388607,4294967295,4294967295,32767,535822336,4294950912,4294967295,4027056127,4294967295,4294967295,2047,16711680,4278190080,4294967295,4278222847,4294967295,4294967295,127,1044480,4292870144,4294967295,4293920767,4294967295,4294967295,255,65408,4294836224,4294967295,4294901887,4294967295,4294967295,15,4088,4294934528,4294967295,4294963207,4294967295,4294967295,2147483663,511,4294963200,2147483647,4294967040,4294967295,4294967295,4160749569,31,4294967040,134217727,4294967280,4294967295,1073741823,4293920752,1,4294967280,8388607,4294967295,4294967295,2214592511,536805503,0,4294967295,4027056127,4294967295,4294967295,4294967295,8386575,4026531840,4294967295,4278222847,4294967295,4294967295,4294967295,524160,4278190080,4294967295,4293920767,4294967295,4294967295,134217727,32760,4294959104,4294967295,4294901887,4294967295,4294967295,4194303,2047,4294967040,4294967295,4294963207,4294967295,4294967295,3758161919,127,4294967288,2147483647,4294967040,4294967295,4294967295,4095,3221225472,4294967295,134217727,4294967280,4294967295,4294967295,127,4278190080,4294967295,8388607,4294967295,4294967295,2147483647,0,4294574080,4294967295,4027056127,4294967295,4294967295,4194303,0,4294959104,4294721535,4278222847,4294967295,4294967295,131071,0,4294967264,4294935039,4293920767,4294967295,4294967295,8191,4042784768,4294967295,4294965263,4294901887,4294967295,4294967295,127,4294934528,1073741823,4294966784,4294963207,4294967295,4294967295,1,4294963200,33554431,2147483584,4294967040,4294967295,134217727,0,4294966796,131071,134217724,2147483632,4294967292,2097151,3221225472,4294967233,3221233663,8388607,2214592511,4294967295,65535,469762048,4294967280,4261413375,4027056127,4164943871,4294967295,2047,29360128,4288544766,4290773055,4278222847,4286709759,4294967295,127,3229483008,4294451199,4294443011,4293920767,4294447103,4294967295,3,4027572248,536838399,4294836224,4294901887,4294934655,1073741823,3221225472,4228120065,33550343,4294959104,268431367,4294963200,33554431,33554432,2130739192,523264,2147483136,8388352,4294966784,2097151,3221225472,8191,4286578688,134217727,524272,4294967232,65535,4294934528,4095,4294950912,8388607,32767,4294967288,4095,4294966784,255,4294966784,4027056127,2147485695,4294967295,255,4294967280,8,4294967280,4278222847,127,4294967295,2147483663,134217727,2147483648,4294967295,4293920767,4026531847,4294967295,4227858432,4194303,4227858432,4294967295,1073676415,4026531840,536870911,4292870144,2097151,4290772992,4294967295,67104775,4261412864,67108863,4294901760,262143,4294836224,2147483647,4194048,4286578688,2097151,4294966272,16383,4294959104,134217727,262128,4294443008,3735551,4294967264,1023,4294966784,8388607,32767,4294934528,2147993599,4294967295,31,4294967264,4027056127,2047,4294963452,4280220799,4294967295,0,4294967294,4278222847,3221225727,4294966815,4294967267,33488895,3221225472,4294967295,4293920767,4261412927,536870851,4294967295,258047,4160749568,4294967295,4294901887,2145386783,4177526780,4294967295,1087,4286578688,4294967295,4294963207,2415904883,4291821567,4294967295,1,4293918720,2147483647,4294967040,4060086271,4294852607,268435455,507904,4294901760,134217727,4294967280,4265607167,4294963711,16777215,8388352,4294959104,8388607,4294967295,4287102975,4294967175,524287,524280,4294966272,4027056127,4294967295,100728831,4294967294,3221241855,65535,4294967168,4278222847,4294967295,4160757759,4294967295,4261413375,4095,4294967280,4293920767,4294967295,4290775039,4294967295,4294443039,511,4294967292,4294901887,4294967295,4294967295,4294967295,4294950913,2147483711,4294967295,4294963207,4294967295,4294967295,32767,4294965248,4026531843,2147483647,4294967040,4294967295,4294967295,1023,1073741760,4290772992,134217727,4294967280,4294967295,4294967295,63,134217724,3758096384,8388607,4294967295,4294967295,4294967295,3221225475,4294967295,3221225473,4027056127,4294967295,4294967295,536870911,4227858432,536870911,4160749568,4278222847,4294967295,4294967295,33554431,4290772992,33554431,4286578688,4293920767,4294967295,4294967295,2097151,4294836224,2097151,4294443008,4294901887,4294967295,4294967295,65535,4294966784,65535,4294934528,4294963207,4294967295,4294967295,2047,4294967280,8191,2147481600,4294967040,4294967295,4294967295,2147483903,4294967295,1023,134217472,4294967280,4294967295,4294967295,4227858447,4294967295,63,8380288,4294967295,4294967295,1073741823,4293918780,4294967295,227,4027054080,4294967295,4294967295,4294967295,4294963203,4294967295,15,4278222336,4294967295,4294967295,1073741823,4294967168,4294967295,0,4293920736,4294967295,4294967295,67108863,4294967294,1073741823,0,4294901880,4294967295,4294967295,4169138175,4294967295,134217727,0,4294963207,4294967295,4294967295,4294967295,4294967295,134217727,1879048672,4294967040,4294967295,4294967295,4294967295,4294967295,4269801471,117444607,4294967280,4294967295,4294967295,4294967295,4294967295,4294967295,8388607,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4027056127,4294967295,4294967295,4294967295,4294967295,4294967295,4160798751,0,0,0,4160749568,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0";

	mt.LoadObstacle(ss);

	ASSERT_TRUE(mt.IsCanRun(130,48));
	/*ASSERT_TRUE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_OBSTACLE) ;
	ASSERT_TRUE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_OBSTACLE) ;
	ASSERT_FALSE(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_OBSTACLE) ;*/
}

TEST(MapTemplate, _LoadTrans)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "5,0,0,10,10,100,100,150,150,300,30";

	ASSERT_TRUE(mt._LoadTrans(ss));
	/*int ssss= mt.m_data[0];
	ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_TRANS,FALSE);	
	ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_TRANS,FALSE);
	ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_TRANS,FALSE);*/
}

TEST(MapTemplate, _LoadRaised)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "0,0,0,10,10,0,100,100,0,150,150,0,300,30,0";

	ASSERT_TRUE(mt._LoadRaised(ss));
	
	/*ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_RAISED,FALSE);	
	ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_RAISED,FALSE);
	ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_RAISED,FALSE);*/
}


TEST(MapTemplate, LoadTeleport)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "0,0,1,"",0,0,0,10,10,1,"",0,0,0,100,100,1,"",0,0,0,150,150,1,"",0,0,0,300,30,1,"",0,0,0";

	ASSERT_TRUE(mt.LoadTeleport(ss));
	/*ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_TRANPORT,FALSE);
	ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_TRANPORT,FALSE);
	ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_TRANPORT,FALSE);*/
}

TEST(MapTemplate, _LoadTrunk)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "20,30,0";

	ASSERT_TRUE(mt._LoadTrunk(ss));

}

TEST(MapTemplate, _LoadMusic)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "0,0,0,10,10,0,100,100,0,150,150,0,300,30,0";

	ASSERT_TRUE(mt._LoadMusic(ss));
	/*ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_MUSIC,FALSE);
	ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_MUSIC,FALSE);
	ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_MUSIC,FALSE);*/
}

TEST(MapTemplate, _LoadLight)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "0,0,0,10,10,0";

	ASSERT_TRUE(mt._LoadLight(ss));
}

TEST(MapTemplate, _LoadMovie)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	
	ss << "0,0,,0,0,0,10,10,,0,0,0,100,100,,0,0,0,150,150,,0,0,0,300,30,,0,0,0";

	ASSERT_TRUE(mt._LoadMovie(ss));
	//ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_MOVIE,FALSE);
	//ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_MOVIE,FALSE);
	//ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_MOVIE,FALSE);
}


TEST(MapTemplate, LoadCreatrue)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "1,30,50,10,0,2,0,0,0,,0,1,0,0,,6,20,100,10,0,2,0,0,0,,0,1,0,0,";

	ASSERT_TRUE(mt.LoadCreatrue(ss));
	/*ASSERT_NE(mt.m_data[30 + mt.m_baseinfo.width * 50] & CELL_FLAGS_MONSTER,FALSE);
	ASSERT_NE(mt.m_data[20 + mt.m_baseinfo.width * 100] & CELL_FLAGS_MONSTER,FALSE);
	ASSERT_EQ(mt.m_data[20 + mt.m_baseinfo.width * 99] & CELL_FLAGS_MONSTER,FALSE);*/
}

TEST(MapTemplate, LoadGameObject)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	
	ss << "2,40,50,10,0,2,0,0,0,,0,,5,20,90,10,0,2,0,0,0,,0,";

	ASSERT_TRUE(mt.LoadGameObject(ss));
	/*ASSERT_NE(mt.m_data[40 + mt.m_baseinfo.width * 50] & CELL_FLAGS_GAMEOBJECT,FALSE);
	ASSERT_NE(mt.m_data[20 + mt.m_baseinfo.width * 90] & CELL_FLAGS_GAMEOBJECT,FALSE);
	ASSERT_EQ(mt.m_data[20 + mt.m_baseinfo.width * 89] & CELL_FLAGS_GAMEOBJECT,FALSE);*/
}

TEST(MapTemplate, LoadMonsterLine)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	
	ss << "1,2,20,40,10,30,2,3,90,10,80,15,70,20";

	ASSERT_TRUE(mt.LoadMonsterLine(ss));
	
}

TEST(MapTemplate, _LoadInving)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,6760,5050,32,16,320,320,0,4,,0,0,100,0,0,0";
	ASSERT_TRUE(mt.LoadBaseinfo(base_ss));
	stringstream ss;
	ss << "0,0,10,10,100,100,150,150,300,30";

	ASSERT_TRUE(mt._LoadInving(ss));
	
	/*ASSERT_NE(mt.m_data[0 + mt.m_baseinfo.width * 0] & CELL_FLAGS_RAISED,FALSE);	
	ASSERT_NE(mt.m_data[300 + mt.m_baseinfo.width * 30] & CELL_FLAGS_RAISED,FALSE);
	ASSERT_EQ(mt.m_data[300 + mt.m_baseinfo.width * 29] & CELL_FLAGS_RAISED,FALSE);*/
}

TEST(MapTemplate,_ls)
{	
	vector<string> vec;
	MapTemplate::_ls("c:/","rar",vec);

}

TEST(MapTemplate,IsCanRun)
{
	MapTemplate mt;

	stringstream base_ss;
	base_ss << "4,4,2011-4-19,160,90,32,16,5,5,0,4,,0,0,0,0,0,0";
	mt.LoadBaseinfo(base_ss);
	
#if 0
	mt.SetObstacle(2,2);

	ASSERT_TRUE(mt.IsCanRun(1,1,3,4,false));
#endif
}

//#undef private
//#undef protected